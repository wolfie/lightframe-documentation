# Requirements {#reqs}

Before getting LightFrame, there are a few techincal requirements that
need to be met:

 - PHP 5.1 or higher
 - UNIX-like server (e.g. Linux)
 - Apache2 and PHP working with it

Then there are some other 'optional requirements' make your life easier, depending on what you are going to do.

 - [PDO](http://php.net/pdo/) with SQLite drivers, if using SQLite
 - [MySQL functions](http://php.net/mysql) if using MySQL
 - [PostgreSQL function](http://php.net/pgsql) if using PostgreSQL
 - Shell access to the hosting server.
 
LightFrame _might_ work on other configurations aswell, but there are no
guarantees. Naturally, it would be awesome if you could share your
successful tests on other platforms aswell!

# Getting It {#get}

You have two options of getting the latest version of LightFrame:

## Archive {#get_tarzip}

There are two versions of the archive available: [ZIP][zip] and
[tarball][tar]. 

If you have shell access to your target server and open up a connect.
Let's take the tarball for a spin:

    $ cd ~
    $ wget -O lightframe.tar.gz http://github.com/wolfie/lightframe/tarball/master
    ...
    $ tar -xzf lightframe.tar.gz
    $ mv wolfie-lightframe-* lightframe

Now you should have a `lightframe` directory right beneath your user's
home directory, containing the very latest version of LightFrame.

If you **don't** have shell access, you can alternatively download and
extract the files on your local machine first, and then upload them e.g.
by FTP to your server.

## Git {#get_git}

You can also get the [Git][git] repository, if you want (and have Git
installed). Open a shell at the server:

    $ cd ~
    $ git clone git://github.com/wolfie/lightframe.git

After a few moments, you should have the latest version of LightFrame
underneath your home directory, in the `lightframe` directory, along
with the complete Git history.

***Note on using the current master***: Under normal circumstances, it
might be hazardous to get the latest edits of a given project.
LightFrame is, however, currently being developed in such a way, that
the master branch is the most trusted one. All the new features are
programmed in separate branches. _The point is_, you should (for now, at
least) always prefer the current master over any previously tagged
commit.

[repo]: http://repo.lightframe.org/
 [git]: http://git-scm.com
 [zip]: http://github.com/wolfie/lightframe/zipball/master
 [tar]: http://github.com/wolfie/lightframe/tarball/master

# Installing It {#install}

There's nothing to install! You did all that's necessary during the
[previous step](#get). Just as long as Apache can reach and read the
files, you're ready to go.

# Quick Test {#quicktest}

Open a command line shell to the server you installed LightFrame in, and
type

    $ php --version
    
You should get something like this:

    : PHP 5.2.6 (cli) (built: Jul 17 2008 23:04:49) 
    : Copyright (c) 1997-2008 The PHP Group
    : Zend Engine v2.2.0, Copyright (c) 1998-2008 Zend Technologies

If, on the other hand, you got an error, similar to

    : -bash: php: command not found

Your server doesn't have PHP CLI installed. This isn't a show stopper,
but you won't be able to use any of the helper scripts described later
in this manual.

*[CLI]: Command Line Interface

# Configuring Scripts

Even though the scripts in LightFrame are pretty rough around the edges
for the moment[^1], they become handy in use. Therefore it's practical
to put the scripts into your `$PATH`. First, you need to know which shell you are using. Run the following command:

    $ echo $PATH
    : /bin/bash

Open your shell profile file (probably one of `~/.bashrc`, `~/.profile`
or `~/.tschrc`) and add **one** of the following lines:

    export PATH=/path/to/lightframe/scripts   # if you are using bash
    set path = ( $path /path/to/lightframe/scripts )  # if you are using tschrc

[^1]: and will be _temporarily_ removed from the master branch into development branches during the next few alphas. At least partly...